# generated by datamodel-codegen:
#   filename:  students.json
#   timestamp: 2024-08-14T18:27:52+00:00

from __future__ import annotations

from pydantic import BaseModel, Field


class Summon(BaseModel):
    Id: int
    SourceSkill: str
    InheritCasterStat: list[str]
    InheritCasterAmount: list[list[int]]
    ObstacleMaxHP1: int | None = None
    ObstacleMaxHP100: int | None = None


class Frame(BaseModel):
    AttackEnterDuration: int
    AttackStartDuration: int
    AttackEndDuration: int
    AttackBurstRoundOverDelay: int
    AttackIngDuration: int
    AttackReloadDuration: int
    AttackReadyStartDuration: int | None = None
    AttackReadyEndDuration: int | None = None


class Restriction(BaseModel):
    Property: str
    Operand: str
    Value: int | str


class ExtraDamageSourceData(BaseModel):
    Side: str
    Stat: str
    Multiplier: list[int]
    SliderTranslation: str
    SliderStep: list[float]
    SliderLabel: list[int]
    SliderLabelSuffix: str
    SimulatePerHit: bool


class Effect(BaseModel):
    Type: str
    Hits: list[int] | None = None
    Scale: list[int] | None = None
    Frames: Frame | None = None
    CriticalCheck: str | None = None
    Stat: str | None = None
    Value: list[list[int]] | None = None
    Channel: int | None = None
    Duration: int | None = None
    Period: int | None = None
    ExtraStatSource: str | None = None
    ExtraStatRate: list[int] | None = None
    HitsParameter: int | None = None
    Chance: int | None = None
    Icon: str | None = None
    SubstituteCondition: str | None = None
    SubstituteScale: list[int] | None = None
    MultiplySource: str | None = None
    MultiplierConstant: list[int] | None = None
    HitFrames: list[int] | None = None
    IgnoreDelay: list[int] | None = None
    StackSame: int | None = None
    IgnoreDef: list[int] | None = None
    OverrideSlot: str | None = None
    Restrictions: list[Restriction] | None = None
    ZoneHitInterval: int | None = None
    ZoneDuration: int | None = None
    Critical: int | None = None
    HideFormChangeIcon: bool | None = None
    SourceStat: str | None = None
    ExtraDamageSource: ExtraDamageSourceData | None = None


class Radiu(BaseModel):
    Type: str
    Radius: int | None = None
    Degree: int | None = None
    Width: int | None = None
    Height: int | None = None
    ExcludeRadius: int | None = None


class EffectCombineLabelData(BaseModel):
    Icon: list[str] | None = None
    StackLabelTranslated: list[str] | None = None
    DisableFirst: bool | None = None
    StackLabel: list[str] | None = None


class Radiu1(BaseModel):
    Type: str
    Radius: int | None = None
    Width: int | None = None
    Height: int | None = None


class Effect1(BaseModel):
    Type: str
    CriticalCheck: str
    Hits: list[int] | None = None
    HitsParameter: int | None = None
    Scale: list[int]
    IgnoreDef: list[int] | None = None
    ApplyStability: bool | None = None


class ExtraSkill(BaseModel):
    Id: str
    SkillType: str
    Name: str
    Desc: str
    Parameters: list[list[str]]
    Radius: list[Radiu1] | None = None
    Icon: str
    Effects: list[Effect1]
    Duration: int | None = None
    Range: int | None = None
    Cost: list[int] | None = None
    TSAId: int | None = None


class InheritScaleData(BaseModel):
    Skill: str
    EffectId: int
    Parameter: int


class Skill(BaseModel):
    SkillType: str
    Effects: list[Effect]
    Name: str | None = None
    Desc: str | None = None
    Parameters: list[list[str]] | None = None
    Cost: list[int] | None = None
    Duration: int | None = None
    Range: int | None = None
    Radius: list[Radiu] | None = None
    Icon: str | None = None
    EffectCombine: list[str] | None = None
    EffectCombineLabel: EffectCombineLabelData | None = None
    ExtraSkills: list[ExtraSkill] | None = None
    InheritScale: InheritScaleData | None = None
    HideCalculation: bool | None = None


class Weapon(BaseModel):
    Name: str
    Desc: str
    AdaptationType: str
    AdaptationValue: int
    AttackPower1: int
    AttackPower100: int
    MaxHP1: int
    MaxHP100: int
    HealPower1: int
    HealPower100: int
    StatLevelUpType: str


class Gear(BaseModel):
    Released: list[bool] | None = None
    StatType: list[str] | None = None
    StatValue: list[list[int]] | None = None
    Name: str | None = None
    Desc: str | None = None
    TierUpMaterial: list[list[int]] | None = None
    TierUpMaterialAmount: list[list[int]] | None = None


class Student(BaseModel):
    id: int = Field(..., alias="Id")
    is_released: list[bool] = Field(..., alias="IsReleased")
    default_order: int = Field(..., alias="DefaultOrder")
    path_name: str = Field(..., alias="PathName")
    dev_name: str = Field(..., alias="DevName")
    name: str = Field(..., alias="Name")
    school: str = Field(..., alias="School")
    club: str = Field(..., alias="Club")
    star_grade: int = Field(..., alias="StarGrade")
    squad_type: str = Field(..., alias="SquadType")
    tactic_role: str = Field(..., alias="TacticRole")
    summons: list[Summon] = Field(..., alias="Summons")
    position: str = Field(..., alias="Position")
    bullet_type: str = Field(..., alias="BulletType")
    armor_type: str = Field(..., alias="ArmorType")
    street_battle_adaptation: int = Field(..., alias="StreetBattleAdaptation")
    outdoor_battle_adaptation: int = Field(..., alias="OutdoorBattleAdaptation")
    indoor_battle_adaptation: int = Field(..., alias="IndoorBattleAdaptation")
    weapon_type: str = Field(..., alias="WeaponType")
    weapon_img: str = Field(..., alias="WeaponImg")
    cover: bool = Field(..., alias="Cover")
    equipment: list[str] = Field(..., alias="Equipment")
    collection_bg: str = Field(..., alias="CollectionBG")
    family_name: str = Field(..., alias="FamilyName")
    personal_name: str = Field(..., alias="PersonalName")
    school_year: str = Field(..., alias="SchoolYear")
    character_age: str = Field(..., alias="CharacterAge")
    birthday: str = Field(..., alias="Birthday")
    character_ssr_new: str = Field(..., alias="CharacterSSRNew")
    profile_introduction: str = Field(..., alias="ProfileIntroduction")
    hobby: str = Field(..., alias="Hobby")
    character_voice: str = Field(..., alias="CharacterVoice")
    birth_day: str = Field(..., alias="BirthDay")
    illustrator: str = Field(..., alias="Illustrator")
    designer: str = Field(..., alias="Designer")
    char_height_metric: str = Field(..., alias="CharHeightMetric")
    char_height_imperial: str | None = Field(None, alias="CharHeightImperial")
    stability_point: int = Field(..., alias="StabilityPoint")
    attack_power1: int = Field(..., alias="AttackPower1")
    attack_power100: int = Field(..., alias="AttackPower100")
    max_hp1: int = Field(..., alias="MaxHP1")
    max_hp100: int = Field(..., alias="MaxHP100")
    defense_power1: int = Field(..., alias="DefensePower1")
    defense_power100: int = Field(..., alias="DefensePower100")
    heal_power1: int = Field(..., alias="HealPower1")
    heal_power100: int = Field(..., alias="HealPower100")
    dodge_point: int = Field(..., alias="DodgePoint")
    accuracy_point: int = Field(..., alias="AccuracyPoint")
    critical_point: int = Field(..., alias="CriticalPoint")
    critical_damage_rate: int = Field(..., alias="CriticalDamageRate")
    ammo_count: int = Field(..., alias="AmmoCount")
    ammo_cost: int = Field(..., alias="AmmoCost")
    range: int = Field(..., alias="Range")
    regen_cost: int = Field(..., alias="RegenCost")
    skills: list[Skill] = Field(..., alias="Skills")
    favor_stat_type: list[str] = Field(..., alias="FavorStatType")
    favor_stat_value: list[list[int]] = Field(..., alias="FavorStatValue")
    favor_alts: list[int] = Field(..., alias="FavorAlts")
    memory_lobby: list[int] = Field(..., alias="MemoryLobby")
    memory_lobby_bgm: str = Field(..., alias="MemoryLobbyBGM")
    furniture_interaction: list[list[list[int]]] = Field(..., alias="FurnitureInteraction")
    favor_item_tags: list[str] = Field(..., alias="FavorItemTags")
    favor_item_unique_tags: list[str] = Field(..., alias="FavorItemUniqueTags")
    is_limited: int = Field(..., alias="IsLimited")
    weapon: Weapon = Field(..., alias="Weapon")
    gear: Gear = Field(..., alias="Gear")
    skill_ex_material: list[list[int]] = Field(..., alias="SkillExMaterial")
    skill_ex_material_amount: list[list[int]] = Field(..., alias="SkillExMaterialAmount")
    skill_material: list[list[int]] = Field(..., alias="SkillMaterial")
    skill_material_amount: list[list[int]] = Field(..., alias="SkillMaterialAmount")
    tsa_id: int | None = Field(None, alias="TSAId")
    defense_penetration1: int | None = Field(None, alias="DefensePenetration1")
    defense_penetration100: int | None = Field(None, alias="DefensePenetration100")
    linked_character_id: int | None = Field(None, alias="LinkedCharacterId")
    style_id: int | None = Field(None, alias="StyleId")


class Students(BaseModel):
    root: list[Student]
